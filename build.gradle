buildscript {
    repositories {
        maven { url "https://repo.grails.org/grails/core" }
    }
    dependencies {
        classpath "org.grails:grails-gradle-plugin:$grailsGradlePluginVersion"
    }
}

version "2.0.2"
group "com.dc"

apply plugin: "eclipse"
apply plugin: "idea"
apply plugin: "org.grails.grails-plugin"
apply plugin: 'maven-publish'
apply plugin: "io.github.gradle-nexus.publish-plugin"
apply plugin: 'io.spring.dependency-management'

Integer buildNumber = 0
Properties versionProps = new Properties()
File versionPropsFile = file('version.properties')

ext {
}

repositories {
    maven { url "https://repo.grails.org/grails/core" }
}

configurations {
    developmentOnly

    doFirst {
        if (versionPropsFile.canRead()) {
            versionProps.load(new FileInputStream(versionPropsFile))
            buildNumber = versionProps['buildNumber'].toInteger()
            version = "$version.$buildNumber"
        } else {
            throw new FileNotFoundException("Could not read version.properties!")
        }
    }

    runtimeClasspath {
        extendsFrom developmentOnly
    }
}

dependencies {
    developmentOnly("org.springframework.boot:spring-boot-devtools")
    compileOnly "io.micronaut:micronaut-inject-groovy"
    implementation "org.springframework.boot:spring-boot-starter-logging"
    implementation "org.springframework.boot:spring-boot-autoconfigure"
    implementation "org.springframework.boot:spring-boot-starter-actuator"
    implementation "org.springframework.boot:spring-boot-starter-tomcat"

    implementation "org.grails:grails-core"
    implementation "org.grails:grails-plugin-services"
    implementation "org.grails:grails-logging"
    implementation "org.grails:grails-web-boot"
    implementation "org.grails.plugins:cache"
    implementation "org.grails.plugins:async"

    console "org.grails:grails-console"

    testImplementation "org.grails.plugins:geb"
    testImplementation "org.grails:grails-gorm-testing-support"
    testImplementation 'org.grails:grails-web-testing-support'

//    implementation group: 'org.springframework.session', name: 'spring-session-core', version: '2.6.0'
//    implementation "org.springframework.session:spring-session:1.3.5.RELEASE"
    implementation group: 'org.springframework.session', name: 'spring-session-data-redis', version: '2.6.0'
    implementation 'org.springframework.data:spring-data-redis'

    implementation 'redis.clients:jedis:3.7.0'
}

jar {
    enabled = true
    archiveClassifier = '' //use empty string
}

tasks.withType(GroovyCompile) {
    configure(groovyOptions) {
        forkOptions.jvmArgs = ['-Xmx1024m']
    }
}

publishing {
    publications {
        mavenJava(MavenPublication) {
            artifactId 'spring-session'
            groupId 'com.dc'
            version version

            from components.java
        }
    }
    repositories {
        maven {
            credentials {
                username 'dev'
                password 'Juz!#202!'
            }
            url "http://nexus.tzspace.net:8081/repository/tzspace-release/"
        }
    }
}

tasks.register('writeBuildNumber') {
    doLast {
        versionProps.setProperty('buildNumber', ((buildNumber + 1).toString()))
        versionProps.store(new FileOutputStream(versionPropsFile.getAbsolutePath()), '')
    }
}

tasks.named('publish') {
    dependsOn('writeBuildNumber')
}